{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./ClientApp/app/app.component.ts","./ClientApp/app/app.component.html","./ClientApp/app/app.module.ts","./ClientApp/app/components/shop/product-list/product-list.component.ts","./ClientApp/app/components/shop/product-list/productList.component.html","./ClientApp/app/services/data.service.ts","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl:\"app.component.html\" ,\n  styles: []\n})\nexport class AppComponent {\n  title = 'Product List';\n}\n","<div class=\"row\">\n    <div class=\"col-md-9\">\n        <h3>\n            {{this.title}}\n        </h3>\n        <product-list></product-list>\n    </div>\n    <div class=\"col-md-3\">\n        <h3>\n            Cart\n        </h3>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ProductListComponent } from './components/shop/product-list/product-list.component';\nimport {DataService} from './services/data.service';\nimport {HttpClientModule} from '@angular/common/http'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductListComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'ClientApp/app/services/data.service';\n\n@Component({\n  selector: 'product-list',\n  templateUrl: \"./productList.component.html\",\n  styles: [\n  ]\n})\nexport class ProductListComponent implements OnInit {\n\n  public products = [];\n  constructor(private data: DataService) { \n    \n  }\n\n  ngOnInit(): void {\n    this.data.loadProducts().subscribe(\n      success=>{\n        if(success){\n          this.products = this.data.products;\n        }\n      },\n      error => {\n        console.log(error)\n      }\n    );\n  }\n\n}\n","<div class=\"row\">\n    <ul>\n        <li *ngFor=\"let product of products\">{{product.title}}: {{product.price | currency:\"EUR\":true}}</li>\n    </ul>\n</div>","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n  \n  public products = []\n\n  loadProducts(){\n    return this.http.get(\"/api/product\")\n      .pipe(\n        map((data: any[]) =>{\n          this.products = data;\n          return true;\n        })\n      );      \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}